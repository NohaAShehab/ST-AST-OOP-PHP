<?php


ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);
echo '<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa" crossorigin="anonymous"></script>';
echo "<link rel='stylesheet' href='styles.css'> ";

echo "<div class='container'>";
echo "<h1> Inheritance   </h1>";




#####
//class Shape{
//    public  $pre;
//    protected $area;
//    private $type;
//
//}
//
//$a = new Shape();
//var_dump($a);
//
//### class recanagle inherit from shape
//
//class Rectangle extends  Shape{
//
//}
//
//$r = new Rectangle();
//var_dump($r);



#################
//echo "<h1> Add function to the parent class</h1>";
//
//class Shape{
//    public  $pre;
//    protected $area=100; # can be accessed in the shape class and the rect
//    private $type; # can be accessed in the shape class only
//
//    function describeShape(){
//        echo "<h3 style='color: darkred'>
//            the shape has preimeter {$this->pre},
//            area {$this->area} and
//            type : {$this->type}
//        </h3>";
//    }
//    function  setType($type){
//        if (in_array($type,["rectangle","triange", "circle" ])){
//            $this->type = $type;
//        }else{
//            $this->type = "DefaultShape";
//        }
//    }
//
//    function getType(){
//        return    $this->type;
//    }
//
//}
//
//$a = new Shape();
//var_dump($a);
//
//### class recanagle inherit from shape
//
//class Rectangle extends  Shape{
//
//    # calling the protected memeber in the drieved class?
//    function  printArea(){
//        echo" area =  {$this->area}";
//    }
//}
//
//$r = new Rectangle();
////var_dump($r);
//$r->pre = 10;
//$r->describeShape();
//
//$r->setType("rectangle");
//var_dump($r);
//
//$r->printArea();
//
###########################################
//echo "<h1> Add function to the parent class</h1>";
//
//class Shape{
//    public  $pre;
//    protected $area=100; # can be accessed in the shape class and the rect
//    private $type; # can be accessed in the shape class only
//
//    function describeShape(){
//        echo "<h3 style='color: darkred'>
//            the shape has preimeter {$this->pre},
//            area {$this->area} and
//            type : {$this->type}
//        </h3>";
//    }
//    function  setType($type){
//        if (in_array($type,["rectangle","triange", "circle" ])){
//            $this->type = $type;
//        }else{
//            $this->type = "DefaultShape";
//        }
//    }
//
//    function getType(){
//        return    $this->type;
//    }
//
//}
//
//$a = new Shape();
//var_dump($a);
//
//### class recanagle inherit from shape
//
//class Rectangle extends  Shape{
//
//    # add new properties to the derived class
//    public  $dim1;
//    public $dim2;
//    # calling the protected memeber in the drieved class?
//    function calArea(){
//        $this->area = $this->dim1* $this->dim2;
//        return $this->area;
//    }
//
//    function setType($type)
//    {
//        parent::setType("rectangle"); // TODO: Change the autogenerated stub
//    }
//
//    public function describeShape()
//    {
//        parent::describeShape();
//        echo " <h3 style='color: purple'> I am a rectangle </h3> ";
//    }
//}
//
//$r = new Rectangle();
////var_dump($r);
//
//$r->dim1 =10;
//$r->dim2= 4;
//$r->setType("abc");
//var_dump($r);
//$r->describeShape();
//$a = $r->calArea();
//var_dump($a);
#################################


//echo "<h1> Add Constructor to the child class</h1>";
//
//class Shape{
//    public  $pre;
//    protected $area=100; # can be accessed in the shape class and the rect
//    private $type; # can be accessed in the shape class only
//
//    function describeShape(){
//        echo "<h3 style='color: darkred'>
//            the shape has preimeter {$this->pre},
//            area {$this->area} and
//            type : {$this->type}
//        </h3>";
//    }
//    function  setType($type){
//        if (in_array($type,["rectangle","triange", "circle" ])){
//            $this->type = $type;
//        }else{
//            $this->type = "DefaultShape";
//        }
//    }
//
//    function getType(){
//        return    $this->type;
//    }
//
//}
//
//$a = new Shape();
//var_dump($a);
//
//### class recanagle inherit from shape
//
//class Rectangle extends  Shape{
//
//    # add new properties to the derived class
//    public  $dim1;
//    public $dim2;
//    # calling the protected memeber in the drieved class?
//
//    function  __construct($dim1, $dim2){
//        $this->dim1= $dim1;
//        $this->dim2= $dim2;
//
//        echo "This is a rectangel object";
//    }
//    function calArea(){
//        $this->area = $this->dim1* $this->dim2;
//        return $this->area;
//    }
//
//    function setType($type)
//    {
//        parent::setType("rectangle"); // TODO: Change the autogenerated stub
//    }
//
//    public function describeShape()
//    {
//        parent::describeShape();
//        echo " <h3 style='color: purple'> I am a rectangle </h3> ";
//    }
//
//}
//
//$r = new Rectangle(4, 5);
////var_dump($r)
//
//$r->setType("abc");
//$a = $r->calArea();
//var_dump($r);
//$r->describeShape();
//var_dump($a);
//
//


###########################
//echo "<h1> Overloading </h1>";
//
//
//class  Student{
//    public $fname;
//    public  $lastname;
//    function updatefullinfo($firstname, $lastname=""){
//        $this->fname = $firstname;
//        $this->lastname = $lastname;
//    }
//
//
//}
//
////$s = new Student();
////$s->updatefullinfo("Noha");
////var_dump($s);
//
//$s2 = new Student();
//$s2->updatefullinfo("Ahmed", "Mostafa");
//var_dump($s2);












####################3
class Person{
    public $name;
    protected $date_of_birth = 16;

    function displayPersonInfo(){
        echo "Person name is {$this->name}, was born at {$this->date_of_birth}";
    }
}



class Engineer extends Person{
    public $email;
    private $salary= 10000;

    ## override the displaypersoninfo

    public function displayPersonInfo()
    {
        parent::displayPersonInfo();
        echo "<p style='color: fuchsia'> email  = {$this->email}, 
salary = {$this->salary} </p>";
    }
}


$e = new Engineer();
$e->name = "Noha";
var_dump($e);
$e->displayPersonInfo();











